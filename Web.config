<?xml version="1.0"?>
<configuration>
	<connectionStrings>
		<add name="ValparaisoConnectionString" connectionString="Data Source=192.168.110.22;Initial Catalog=Valparaiso;Persist Security Info=True;User ID=sweb;Password=cdq128bit" providerName="System.Data.SqlClient"/>
		<add name="Valpo2" connectionString="Data Source=192.168.110.22;Initial Catalog=Valparaiso2;Persist Security Info=True;User ID=sweb;Password=cdq128bit" providerName="System.Data.SqlClient"/>
		<add name="Rem_Municipal" connectionString="Data Source=192.168.110.22;Initial Catalog=Rem_municipal;User ID=sweb;Password=cdq128bit" providerName="System.Data.SqlClient"/>
		<add name="Rem_Munpae" connectionString="Data Source=192.168.110.22;Initial Catalog=Rem_Munpae;User ID=sweb;Password=cdq128bit" providerName="System.Data.SqlClient"/>
		<add name="tes" connectionString="Data Source=192.168.110.22;Initial Catalog=Tesoreria;User ID=sweb;Password=cdq128bit" providerName="System.Data.SqlClient"/>
		<add name="pcv" connectionString="Data Source=192.168.110.22;Initial Catalog=Permisos_de_Circulacion;User ID=sweb;Password=cdq128bit" providerName="System.Data.SqlClient"/>
		<add name="patcom" connectionString="Data Source=192.168.110.22;Initial Catalog=Patentes_Comerciales;User ID=sweb;Password=cdq128bit" providerName="System.Data.SqlClient"/>
		<add name="aseo" connectionString="Data Source=192.168.110.22;Initial Catalog=Valparaiso;User ID=sweb;Password=cdq128bit" providerName="System.Data.SqlClient"/>
	</connectionStrings>
	<system.web>

		<!-- 
            Visual Basic options:
            Set strict="true" to disallow all data type conversions 
            where data loss can occur. 
            Set explicit="true" to force declaration of all variables.
        -->
		<compilation debug="true" strict="false" explicit="true" targetFramework="4.0"/>
		<!--
          The <authentication> section enables configuration 
          of the security authentication mode used by 
          ASP.NET to identify an incoming user. 
        -->

		<!--
           The <customErrors> section enables configuration 
           of what to do if/when an unhandled error occurs 
           during the execution of a request. Specifically, 
           it enables developers to configure html error pages 
           to be displayed in place of a error stack trace.

           <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
             <error statusCode="403" redirect="NoAccess.htm" />
             <error statusCode="404" redirect="FileNotFound.htm" />
           </customErrors>
        -->
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
			<namespaces>
				<clear/>
				<add namespace="System"/>
				<add namespace="System.Collections"/>
				<add namespace="System.Collections.Generic"/>
				<add namespace="System.Collections.Specialized"/>
				<add namespace="System.Configuration"/>
				<add namespace="System.Text"/>
				<add namespace="System.Text.RegularExpressions"/>
				<add namespace="System.Web"/>
				<add namespace="System.Web.Caching"/>
				<add namespace="System.Web.SessionState"/>
				<add namespace="System.Web.Security"/>
				<add namespace="System.Web.Profile"/>
				<add namespace="System.Web.UI"/>
				<add namespace="System.Web.UI.WebControls"/>
				<add namespace="System.Web.UI.WebControls.WebParts"/>
				<add namespace="System.Web.UI.HtmlControls"/>
				<add namespace="System.Data"/>
				<add namespace="System.Data.SqlClient"/>
			</namespaces>
		</pages>
	</system.web>
</configuration>